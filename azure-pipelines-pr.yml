# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pr:
  branches:
    include:
    - '*'

variables:
  NODE_VERSION: '20.x'
  # Add more variables for better maintainability
  IS_PR: $[eq(variables['Build.Reason'], 'PullRequest')]
  CACHE_KEY: 'npm | $(Agent.OS) | package-lock.json'

pool:
  name: PoolRunners

stages:
- stage: validation
  displayName: 'Validation'
  jobs:
  - job: build_test_audit
    displayName: 'Build and Test'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: $(NODE_VERSION)
      displayName: 'Install Node.js'
    
    - task: Cache@2
      inputs:
        key: $(CACHE_KEY)
        path: $(npm_config_cache)
      displayName: 'Cache npm packages'

    - script: |
        npm ci
      displayName: 'Install Dependencies'
      
    - script: |
        if [ -f "package.json" ]; then
          if grep -q "\"test\":" "package.json"; then
            echo "Found test script, executing..."
            npm test
          else
            echo "##vso[task.logissue type=warning]No test script found in package.json"
            echo "Consider adding tests to your project"
          fi
        else
          echo "##vso[task.logissue type=error]package.json not found"
          exit 1
        fi
      displayName: 'Run Tests'
      continueOnError: true
    
    - script: |
        npm run build --prod
      displayName: 'Build the code'
    
    - script: |
        echo "Running security audit..."
        if npm audit --production; then
          echo "No vulnerabilities found"
        else
          echo "##vso[task.logissue type=warning]Security vulnerabilities found"
          echo "Review npm audit report above"
        fi
      displayName: 'Security Audit'
      continueOnError: true

    - script: |
        echo "##vso[task.setvariable variable=BUILD_ID]$(Build.BuildId)"
        echo "Build ID: $(Build.BuildId)"
      displayName: 'Save Build ID'

    # Optional: Add artifact publishing if needed
    - task: PublishBuildArtifacts@1
      condition: succeeded()
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      displayName: 'Publish Build Artifacts'

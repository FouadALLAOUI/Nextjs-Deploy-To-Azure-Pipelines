trigger: none
pr: none


pool:
  name: PoolRunners

variables:
  IMAGE_NAME: 'fouadallaoui/nextjsbaseapp'
  DOCKER_IMAGE_TAG: $(Build.BuildID)
  NODE_VERSION: '20.x'

stages:
- stage: validation  # Define a stage for validation.
  displayName: 'Validation'  # Display name for the stage.
  jobs:
  - job: Install_Build_Audit  # Job for installing dependencies and building the project.
    displayName: 'Install Dependencies & Build'  # Display name for the job.
    steps:
    - task: NodeTool@0  # Task to install Node.js.
      inputs:
        versionSpec: $(NODE_VERSION)  # Use the specified Node.js version.
      displayName: 'Install Node.js'  # Display name for the step.
    
    - script: |
        npm ci  # Clean install of dependencies.
      displayName: 'Clean install'  # Display name for the step.
    
    - script: |
        npm test || echo 'Script not found'  # Run tests, handle missing script.
      displayName: 'Test the code'  # Display name for the step.
    
    - script: |
        npm run build --prod  # Build the project for production.
      displayName: 'Build the code'  # Display name for the step.
    
    - script: |
        npm audit --prod  # Audit the production dependencies for vulnerabilities.
      displayName: 'Audit the code'  # Display name for the step.


- stage:
  displayName: 'Build&Push docker image'  # Display name for the stage.
  dependsOn: validation  # The stage depends on the validation stage.
  jobs:
  - job: Build_Docker_Image  # Job for building the Docker image.
    displayName: 'Build Docker Image'  # Display name for the job.
    steps:
    - script: |
        ls -la 
        docker build --no-cache -t $(IMAGE_NAME):$(DOCKER_IMAGE_TAG) .
      displayName: 'Build Docker Image'  # Display name for the step.

    - script: |
        docker images
        echo '###################################'
        docker rmi -f $(IMAGE_NAME):$(Build.BuildID)
      displayName: 'Remove old Docker Image'  # Display name for the step.



